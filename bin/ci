#!/bin/bash
#
# ci() - a quick and curt wrapper for RCS's check in
#
# ARGUMENTS: all passed on to the regular ci
#
# Really, this just adds a -w option when running this as root
#
 
# Find the existing version of ci
local ci=$( type -p ci 2>/dev/null ) || 
   { printf "ci executable not found\n" && return 1; }
# remove the human junk
ci=$( echo ${ci} | awk '{ print $3 }' )

# only much with things if we're root
if [[ "$EUID" == "0" ]]; then

   local w_arg="-w$USER"
   local args_to_pass=""

   # Unfortunately, ci requires no space between the arg option and the arg itself 
   # (e.g. "-wclake" instead of "-w clake") so just looking for a substring in the 
   # args with -w doesn't work. Gotta iterate and look for a token that starts with 
   # -w to see if the user is giving that option already
   # only add the -w option if we are root and if there isn't already -w passed
   while (( $# )); do
      case $1 in
         -w*)     w_arg=""
                  ;;
      esac
      args_to_pass="${args_to_pass} $1"
      shift
   done

   # do it
   eval "${ci} ${args_to_pass}"
 
else

   # don't muck with anything if we're not root
   eval "${ci} $@"

fi

